<?xml version="1.0" encoding="UTF-8"?>
<AggregatesAndRules>
	<Aggregates>
		<NAME><![CDATA[@ApprovedTxn]]></NAME>
		<DESCRIPTION><![CDATA[1 when the transaction is approved (reason code 000), and 0 otherwise]]></DESCRIPTION>
		<RULEDEFID>4</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[IF (@SD_RESP_CDE='000')  SET @ApprovedTxn='1' ELSE  SET @ApprovedTxn='0']]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[]]>
		</ENTRANCE_CRITERIA>
		<AGGREGATE_TYPE>BIT</AGGREGATE_TYPE>
	</Aggregates>
	<Aggregates>
		<NAME><![CDATA[@CustomerGroup]]></NAME>
		<DESCRIPTION><![CDATA[Customer group, as INDIV, CORP or SOLPR]]></DESCRIPTION>
		<RULEDEFID>4</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[DECLARE @TempCustomerType VARCHAR(8) SELECT @TempCustomerType=SM_ACCT_CAT_CDE FROM UAN_MASTER WHERE SM_UAN=@SD_UAN  IF @TempCustomerType in ('AC', 'AD', 'BB', 'BE', 'BF', 'BG', 'BH', 'BI', 'BJ', 'BK', 'BL', 'BR', 'CB', 'CC', 'CD', 'CE', 'CF', 'CG', 'CH', 'CI', 'CK', 'CM', 'CQ', 'FA', 'GA', 'GB')  SET @CustomerGroup='CORP' ELSE IF @TempCustomerType in ('EA', 'EB', 'EC', 'EJ', 'EX', 'E1', 'E2', 'E3')  SET @CustomerGroup='INDIV' ELSE IF @TempCustomerType in ('CA')  SET @CustomerGroup='SOLPR' ELSE  SET @CustomerGroup='NONE']]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[]]>
		</ENTRANCE_CRITERIA>
		<AGGREGATE_TYPE>BIT</AGGREGATE_TYPE>
	</Aggregates>
	<Aggregates>
		<NAME><![CDATA[@CustomerType]]></NAME>
		<DESCRIPTION><![CDATA[Customer type, as in EQN]]></DESCRIPTION>
		<RULEDEFID>4</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[SELECT @CustomerType=SM_ACCT_CAT_CDE FROM UAN_MASTER WHERE SM_UAN=@SD_UAN]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[]]>
		</ENTRANCE_CRITERIA>
		<AGGREGATE_TYPE>BIT</AGGREGATE_TYPE>
	</Aggregates>
	<Aggregates>
		<NAME><![CDATA[@isLoanAccount]]></NAME>
		<DESCRIPTION><![CDATA[1 when the main account involved is a loan account 0 otherwise]]></DESCRIPTION>
		<RULEDEFID>4</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[IF (LEN(@SM_ACCT_PROD_CAT)=3)   SET @isLoanAccount='1' ELSE   SET @isLoanAccount='0']]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[]]>
		</ENTRANCE_CRITERIA>
		<AGGREGATE_TYPE>BIT</AGGREGATE_TYPE>
	</Aggregates>
	<Rules>
		<NAME><![CDATA[Acc to Acc txns – Abnormal Amount, CORP]]></NAME>
		<DESCRIPTION><![CDATA[Generate an alert if amount of A/c to A/c transfers (diff cust ID) on CORP accounts exceeds 2 times the 6-month average]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[((SELECT SUM(TXNS_AMOUNT) FROM EP_SAME_CUST WHERE CYCLE_START_DATE>=DATEADD(DAY, -30, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) + (SELECT SUM(MD_TRAN_AMT1) FROM SHORTWINDOW WHERE SD_PRI_ACCT_NUM=@SD_PRI_ACCT_NUM   AND DD_PARTITION_DATE>=CAST(GETDATE() AS DATE)   AND SD_RESP_CDE='000')) * 2 > ((SELECT SUM(TXNS_AMOUNT) FROM EP_SAME_CUST WHERE CYCLE_START_DATE>=DATEADD(DAY, -180, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) / 180)]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@CustomerGroup = 'CORP' AND @SD_TRAN_CDE = '474' AND @SD_RESP_CDE = '000']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Acc to Acc txns – Abnormal Amount, INDIV]]></NAME>
		<DESCRIPTION><![CDATA[Generate an alert if amount of A/c to A/c transfers (diff cust ID) on INDIV accounts exceeds 2 times the 6-month average]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[((SELECT SUM(TXNS_AMOUNT) FROM EP_SAME_CUST WHERE CYCLE_START_DATE>=DATEADD(DAY, -30, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) + (SELECT SUM(MD_TRAN_AMT1) FROM SHORTWINDOW WHERE SD_PRI_ACCT_NUM=@SD_PRI_ACCT_NUM   AND DD_PARTITION_DATE>=CAST(GETDATE() AS DATE)   AND SD_RESP_CDE='000')) * 2 > ((SELECT SUM(TXNS_AMOUNT) FROM EP_SAME_CUST WHERE CYCLE_START_DATE>=DATEADD(DAY, -180, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) / 180)]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@CustomerGroup = 'INDIV' AND @SD_TRAN_CDE = '474' AND @SD_RESP_CDE = '000']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Acc to Acc txns – Abnormal Amount, SOLPR]]></NAME>
		<DESCRIPTION><![CDATA[Generate an alert if amount of A/c to A/c transfers (diff cust ID) on SOLPR accounts exceeds 2 times the 6-month average]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[((SELECT SUM(TXNS_AMOUNT) FROM EP_SAME_CUST WHERE CYCLE_START_DATE>=DATEADD(DAY, -30, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) + (SELECT SUM(MD_TRAN_AMT1) FROM SHORTWINDOW WHERE SD_PRI_ACCT_NUM=@SD_PRI_ACCT_NUM   AND DD_PARTITION_DATE>=CAST(GETDATE() AS DATE)   AND SD_RESP_CDE='000')) * 2 > ((SELECT SUM(TXNS_AMOUNT) FROM EP_SAME_CUST WHERE CYCLE_START_DATE>=DATEADD(DAY, -180, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) / 180)]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@CustomerGroup = 'SOLPR' AND @SD_TRAN_CDE = '474' AND @SD_RESP_CDE = '000']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Acc to Acc txns – Abnormal Count, CORP]]></NAME>
		<DESCRIPTION><![CDATA[Generate an alert if count of A/c to A/c transfers (diff cust ID) on CORP accounts exceeds 2 times the 6-month average]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[((SELECT SUM(TXNS_COUNT) FROM EP_SAME_CUST WHERE CYCLE_START_DATE>=DATEADD(DAY, -30, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) + (SELECT COUNT(1) FROM SHORTWINDOW WHERE SD_PRI_ACCT_NUM=@SD_PRI_ACCT_NUM   AND DD_PARTITION_DATE>=CAST(GETDATE() AS DATE)   AND SD_RESP_CDE='000')) * 2 > ((SELECT SUM(TXNS_COUNT) FROM EP_SAME_CUST WHERE CYCLE_START_DATE>=DATEADD(DAY, -180, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) / 180)]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@CustomerGroup = 'CORP' AND @SD_TRAN_CDE = '474' AND @SD_RESP_CDE = '000']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Acc to Acc txns – Abnormal Count, INDIV]]></NAME>
		<DESCRIPTION><![CDATA[Generate an alert if count of A/c to A/c transfers (diff cust ID) on INDIV accounts exceeds 2 times the 6-month average]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[((SELECT SUM(TXNS_COUNT) FROM EP_SAME_CUST WHERE CYCLE_START_DATE>=DATEADD(DAY, -30, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) + (SELECT COUNT(1) FROM SHORTWINDOW WHERE SD_PRI_ACCT_NUM=@SD_PRI_ACCT_NUM   AND DD_PARTITION_DATE>=CAST(GETDATE() AS DATE)   AND SD_RESP_CDE='000')) * 2 > ((SELECT SUM(TXNS_COUNT) FROM EP_SAME_CUST WHERE CYCLE_START_DATE>=DATEADD(DAY, -180, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) / 180)]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@CustomerGroup = 'INDIV' AND @SD_TRAN_CDE = '474' AND @SD_RESP_CDE = '000']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Acc to Acc txns – Abnormal Count, SOLPR]]></NAME>
		<DESCRIPTION><![CDATA[Generate an alert if count of A/c to A/c transfers (diff cust ID) on SOLPR accounts exceeds 2 times the 6-month average]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[((SELECT SUM(TXNS_COUNT) FROM EP_SAME_CUST WHERE CYCLE_START_DATE>=DATEADD(DAY, -30, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) + (SELECT COUNT(1) FROM SHORTWINDOW WHERE SD_PRI_ACCT_NUM=@SD_PRI_ACCT_NUM   AND DD_PARTITION_DATE>=CAST(GETDATE() AS DATE)   AND SD_RESP_CDE='000')) * 2 > ((SELECT SUM(TXNS_COUNT) FROM EP_SAME_CUST WHERE CYCLE_START_DATE>=DATEADD(DAY, -180, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) / 180)]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@CustomerGroup = 'SOLPR' AND @SD_TRAN_CDE = '474' AND @SD_RESP_CDE = '000']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Account Branch different than Loan Branch]]></NAME>
		<DESCRIPTION><![CDATA[Generate an alert when the loan branch is different from the account holding branch (any of his other accounts)]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[NOT EXISTS (  SELECT TOP 1 1 FROM ACCOUNT_MASTER  WHERE SM_UAN=@SD_UAN  AND SM_ACCT_BNK_BRANCH_ID=SUBSTRING(@SD_NRT_MODEL_1_ID, 16, 20) )]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@RECORD_SOURCE_ID=17 AND @SD_EVENT_TYP='LOR']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Account take over after channel limit change]]></NAME>
		<DESCRIPTION><![CDATA[Generate an alert for a POS debit transaction exceeding the previous POS limit, in a customer account after the POS limit changed within 24 hours]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[@MD_TRAN_AMT1 > (SELECT CAST((SELECT SUBSTRING(SD_EVENT_DETAIL2, 0, CHARINDEX('to', SD_EVENT_DETAIL2)-1)) AS MONEY) FROM SHORTWINDOW WHERE RECORD_SOURCE_ID=17   AND SD_EVENT_TYP='DLM'   AND SD_PRI_ACCT_NUM=@SD_PRI_ACCT_NUM   AND DD_PARTITION_DATE>=DATEADD(HOUR, -24, GETDATE())   AND DD_DATE>DATEADD(HOUR, -24, GETDATE()) )]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@CustomerGroup = 'INDIV' AND @SD_PROD_IND = '02' AND @SD_CR_DB_IND = 'D' AND @MD_TRAN_AMT1 > 0 AND @SD_RESP_CDE = '000']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Account Takeover – change in Mobile phone number]]></NAME>
		<DESCRIPTION><![CDATA[Generates an alert when a debit transaction OR ATM card has been requested within 7 days after a change of mobile phone number which is registered for receiving SMS alerts]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[EXISTS (    SELECT TOP 1 1 FROM EP_PHN_CHANGE    WHERE PRIMARY_FIELD=@SD_PRI_ACCT_NUM AND    CYCLE_END_DATE>DATEDIFF(DAY, -7, GETDATE()) )]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@SD_CR_DB_IND='D' OR (@RECORD_SOURCE_ID=17 AND @SD_EVENT_TYP = 'CIS')]]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Account Takeover – no Mobile phone number]]></NAME>
		<DESCRIPTION><![CDATA[Generates an alert when a debit transaction is done on an account which does not have a registered mobile number (any)]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[]]>
		</SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@SD_CR_DB_IND='D' AND @MD_TRAN_AMT1 > 0 AND @SM_USER_HOME_PHN IS NULL AND @SM_USER_MOB_PHN IS NULL]]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Cash withdrawal amount]]></NAME>
		<DESCRIPTION><![CDATA[Generate an alert for cash withdrawal of SAR 10,000 within 48 hours]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[(SELECT SUM(MD_TRAN_AMT1) FROM SHORTWINDOW WHERE SD_PRI_ACCT_NUM=@SD_PRI_ACCT_NUM   AND DD_PARTITION_DATE>=DATEADD(HOUR, -48, GETDATE())   AND DD_DATE>DATEADD(HOUR, -48, GETDATE())   AND SD_TRAN_CDE IN ('031', '163', '250', '452') ) >= 10000]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@CustomerGroup = 'INDIV' AND @SD_TRAN_CDE IN ('031', '163', '250', '452') AND @MD_TRAN_AMT1 > 0 AND @SD_RESP_CDE = '000']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Cheque issued – abnormal amount]]></NAME>
		<DESCRIPTION><![CDATA[Generate an alert for a draft/official cheque issued from an account where the amount is equal to or exceeds 50% of the average for last 6 months]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[((SELECT SUM(TXNS_AMOUNT) FROM EP_CHEQUE2 WHERE CYCLE_START_DATE>=DATEADD(DAY, -30, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) + (SELECT SUM(MD_TRAN_AMT1) FROM SHORTWINDOW WHERE SD_PRI_ACCT_NUM=@SD_PRI_ACCT_NUM   AND DD_PARTITION_DATE>=CAST(GETDATE() AS DATE)   AND SD_RESP_CDE='000')) * 2 > ((SELECT SUM(TXNS_AMOUNT) FROM EP_CHEQUE2 WHERE CYCLE_START_DATE>=DATEADD(DAY, -180, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) / 180)]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@CustomerGroup IN ('SOLPR', 'INDIV') AND @SD_TRAN_CDE IN ('016', '017', '019', '032', '203', '205', '206', '451') AND @MD_TRAN_AMT1 > 0 AND @SD_RESP_CDE = '000']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Cheque Withdrawal – Abnormal Amount, CORP]]></NAME>
		<DESCRIPTION><![CDATA[Generate an alert if count  of Cheque Debits on CORP accounts exceeds amount of 2 (average of 6 months historical data)]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[((SELECT SUM(TXNS_AMOUNT) FROM EP_CHEQUE WHERE CYCLE_START_DATE>=DATEADD(DAY, -30, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) + (SELECT SUM(MD_TRAN_AMT1) FROM SHORTWINDOW WHERE SD_PRI_ACCT_NUM=@SD_PRI_ACCT_NUM   AND DD_PARTITION_DATE>=CAST(GETDATE() AS DATE)   AND SD_RESP_CDE='000')) * 2 > ((SELECT SUM(TXNS_AMOUNT) FROM EP_CHEQUE WHERE CYCLE_START_DATE>=DATEADD(DAY, -180, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) / 180)]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@CustomerGroup = 'CORP' AND @SD_TRAN_CDE IN ('016', '017', '203', '205', '206', '207', '951') AND @SD_RESP_CDE = '000']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Cheque Withdrawal – Abnormal Amount, INDIV]]></NAME>
		<DESCRIPTION><![CDATA[Generate an alert if count  of Cheque Debits on INDIV accounts exceeds amount of 2 (average of 6 months historical data)]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[((SELECT SUM(TXNS_AMOUNT) FROM EP_CHEQUE WHERE CYCLE_START_DATE>=DATEADD(DAY, -30, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) + (SELECT SUM(MD_TRAN_AMT1) FROM SHORTWINDOW WHERE SD_PRI_ACCT_NUM=@SD_PRI_ACCT_NUM   AND DD_PARTITION_DATE>=CAST(GETDATE() AS DATE)   AND SD_RESP_CDE='000')) * 2 > ((SELECT SUM(TXNS_AMOUNT) FROM EP_CHEQUE WHERE CYCLE_START_DATE>=DATEADD(DAY, -180, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) / 180)]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@CustomerGroup = 'INDIV' AND @SD_TRAN_CDE IN ('016', '017', '203', '205', '206', '207', '951') AND @SD_RESP_CDE = '000']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Cheque Withdrawal – Abnormal Amount, SOLPR]]></NAME>
		<DESCRIPTION><![CDATA[Generate an alert if count  of Cheque Debits on SOLPR accounts exceeds amount of 2 (average of 6 months historical data)]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[((SELECT SUM(TXNS_AMOUNT) FROM EP_CHEQUE WHERE CYCLE_START_DATE>=DATEADD(DAY, -30, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) + (SELECT SUM(MD_TRAN_AMT1) FROM SHORTWINDOW WHERE SD_PRI_ACCT_NUM=@SD_PRI_ACCT_NUM   AND DD_PARTITION_DATE>=CAST(GETDATE() AS DATE)   AND SD_RESP_CDE='000')) * 2 > ((SELECT SUM(TXNS_AMOUNT) FROM EP_CHEQUE WHERE CYCLE_START_DATE>=DATEADD(DAY, -180, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) / 180)]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@CustomerGroup = 'SOLPR' AND @SD_TRAN_CDE IN ('016', '017', '203', '205', '206', '207', '951') AND @SD_RESP_CDE = '000']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Cheque Withdrawal – Abnormal Count, CORP]]></NAME>
		<DESCRIPTION><![CDATA[Generate an alert if count  of Cheque Debits on CORP accounts exceeds count of 2 (average of 6 months historical data)]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[((SELECT SUM(TXNS_COUNT) FROM EP_CHEQUE WHERE CYCLE_START_DATE>=DATEADD(DAY, -30, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) + (SELECT COUNT(1) FROM SHORTWINDOW WHERE SD_PRI_ACCT_NUM=@SD_PRI_ACCT_NUM   AND DD_PARTITION_DATE>=CAST(GETDATE() AS DATE)   AND SD_RESP_CDE='000')) * 2 > ((SELECT SUM(TXNS_COUNT) FROM EP_CHEQUE WHERE CYCLE_START_DATE>=DATEADD(DAY, -180, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) / 180)]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@CustomerGroup = 'CORP' AND @SD_TRAN_CDE IN ('016', '017', '203', '205', '206', '207', '951') AND @SD_RESP_CDE = '000']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Cheque Withdrawal – Abnormal Count, INDIV]]></NAME>
		<DESCRIPTION><![CDATA[Generate an alert if count of Cheque Debits on INDIV accounts exceeds count of 2 (average of 6 months historical data)]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[((SELECT SUM(TXNS_COUNT) FROM EP_CHEQUE WHERE CYCLE_START_DATE>=DATEADD(DAY, -30, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) + (SELECT COUNT(1) FROM SHORTWINDOW WHERE SD_PRI_ACCT_NUM=@SD_PRI_ACCT_NUM   AND DD_PARTITION_DATE>=CAST(GETDATE() AS DATE)   AND SD_RESP_CDE='000')) * 2 > ((SELECT SUM(TXNS_COUNT) FROM EP_CHEQUE WHERE CYCLE_START_DATE>=DATEADD(DAY, -180, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) / 180)]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@CustomerGroup = 'INDIV' AND @SD_TRAN_CDE IN ('016', '017', '203', '205', '206', '207', '951') AND @SD_RESP_CDE = '000']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Cheque Withdrawal – Abnormal Count, SOLPR]]></NAME>
		<DESCRIPTION><![CDATA[Generate an alert if count  of Cheque Debits on SOLPR accounts exceeds count of 2 (average of 6 months historical data)]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[((SELECT SUM(TXNS_COUNT) FROM EP_CHEQUE WHERE CYCLE_START_DATE>=DATEADD(DAY, -30, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) + (SELECT COUNT(1) FROM SHORTWINDOW WHERE SD_PRI_ACCT_NUM=@SD_PRI_ACCT_NUM   AND DD_PARTITION_DATE>=CAST(GETDATE() AS DATE)   AND SD_RESP_CDE='000')) * 2 > ((SELECT SUM(TXNS_COUNT) FROM EP_CHEQUE WHERE CYCLE_START_DATE>=DATEADD(DAY, -180, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) / 180)]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@CustomerGroup = 'SOLPR' AND @SD_TRAN_CDE IN ('016', '017', '203', '205', '206', '207', '951') AND @SD_RESP_CDE = '000']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Chip txn, 2 cntry, 3 hours]]></NAME>
		<DESCRIPTION><![CDATA[Alert for Debit /Travel/Shopping card transactions from 2 different countries in 3 hours where  both have POS entry mode=05]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>1</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[EXISTS (SELECT TOP 1 1 FROM SHORTWINDOW   WHERE SD_PAN=@SD_PAN   AND DD_PARTITION_DATE>=CAST(GETDATE() AS DATE)   AND DD_DATE>DATEADD(HOUR, -3, GETDATE())   AND SUBSTRING (SD_PT_SRV_ENTRY_MDE,1,2)='05'   AND SD_TERM_CNTRY<>@SD_TERM_CNTRY)]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[SUBSTRING (@SD_PT_SRV_ENTRY_MDE,1,2) = '05']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Customer to Staff Account transactions – Count]]></NAME>
		<DESCRIPTION><![CDATA[Generate an alert for credit received in a staff account [EC] from any  of the following customer types]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[@SD_ORIG_WIR_ACCT_IDENT IS NOT NULL AND EXISTS (SELECT TOP 1 1 FROM UAN_MASTER WHERE SM_UAN=@SD_ORIG_WIR_ACCT_IDENT   AND SM_ACCT_CAT_CDE IN ('BE', 'BF', 'BG', 'BH', 'BI', 'BJ', 'BK', 'BR', 'CB', 'CC', 'CD', 'CE', 'CF', 'CG', 'CH', 'CI', 'CK', 'CM', 'CQ', 'DA', 'DB', 'DC', 'DD', 'DE', 'EA', 'EB', 'EJ', 'FA', 'GA', 'GB', 'IA', 'IB'))]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@SD_CR_DB_IND='C' AND @SD_RESP_CDE = '000' AND @CustomerType = 'EC']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Dormant Account – transaction amount]]></NAME>
		<DESCRIPTION><![CDATA[Generates an alert if there are transaction of more than 10000 SAR preceded by change in account status from Dormant (DRN) to Active in 72 hours]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[EXISTS ( SELECT TOP 1 1 FROM SHORTWINDOW WHERE SD_PRI_ACCT_NUM=@SD_PRI_ACCT_NUM   AND RECORD_SOURCE_ID=17   AND SD_EVENT_TYP='AUP'   AND SD_EVENT_DETAIL2 like '%to Active%') AND (SELECT SUM(MD_TRAN_AMT1) FROM SHORTWINDOW WHERE SD_PRI_ACCT_NUM=@SD_PRI_ACCT_NUM) >=10000]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@SD_RESP_CDE = '000' AND @MD_TRAN_AMT1 > 0]]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Dormant Account – transaction count]]></NAME>
		<DESCRIPTION><![CDATA[Generates an alert if there are more than 3 Dr/Cr transactions preceded by change in Account status from Dormant (DRN) to Active in 72 hours]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[EXISTS ( SELECT TOP 1 1 FROM SHORTWINDOW WHERE SD_PRI_ACCT_NUM=@SD_PRI_ACCT_NUM   AND RECORD_SOURCE_ID=17   AND SD_EVENT_TYP='AUP'   AND SD_EVENT_DETAIL2 like '%to Active%') AND (SELECT COUNT(1) FROM SHORTWINDOW WHERE SD_PRI_ACCT_NUM=@SD_PRI_ACCT_NUM   AND MD_TRAN_AMT1 > 0) >=3]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@SD_RESP_CDE = '000' AND @MD_TRAN_AMT1 > 0]]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[First DD/cheque issued]]></NAME>
		<DESCRIPTION><![CDATA[Generate an alert for a draft/official cheque issued from an account where no draft /official cheque were issued in the past]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[NOT EXISTS (SELECT TOP 1 1 FROM EP_CHEQUE2  WHERE CYCLE_START_DATE>=DATEADD(MONTH, -3, CAST(GETDATE() AS DATE))  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM)]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@CustomerGroup IN ('SOLPR', 'INDIV') AND @SD_TRAN_CDE IN ('016', '017', '019', '032', '203', '205', '206', '451') AND @MD_TRAN_AMT1 > 0 AND @SD_RESP_CDE = '000']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Foreign currency cheques, drawn on foreign banks]]></NAME>
		<DESCRIPTION><![CDATA[Alert for a foreign currency cheque of 100,000 or more SAR deposited in a new account Individual/Sole Proprietorship/ Corporate account opened during last 60 days]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[(SELECT DM_ACCT_OPN_DAT FROM ACCOUNT_MASTER   WHERE SM_PRI_ACCT_NUM=@SM_PRI_ACCT_NUM) > DATEADD(DAY, -60, GETDATE())]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@SD_TRAN_CDE = '033' AND @MD_TRAN_AMT1 > 100000]]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[High Risk Employer loans count]]></NAME>
		<DESCRIPTION><![CDATA[Generate an alert for 3 or more applications from high Risk Employer loans for the following Employer codes within last 7 days]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[(SELECT COUNT(1) FROM ACCOUNT_MASTER WHERE SM_USER_POSTAL_CDE=@SM_USER_POSTAL_CDE AND DM_ACCT_OPN_DAT>DATEADD(DAY, -3, GETDATE())) >= 3]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@isLoanAccount='1' AND @SD_TRAN_CDE IN ('336', '337') AND @CustomerGroup = 'INDIV' AND  @SM_USER_POSTAL_CDE in ('000402', '025001', '008201', '004401', '044201', '009001', '001001', '061101', '012101', '005201', '056401', '075701', '076601', '076701', '078701', '077701', '077401', '011701')]]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Inter-account Staff  transactions – Amount]]></NAME>
		<DESCRIPTION><![CDATA[Generate an alert for transfers of 10000 SAR or more between the any staff customer’s accounts in 24 hours]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[(SELECT SUM(MD_TRAN_AMT1) FROM SHORTWINDOW WHERE SD_PRI_ACCT_NUM=@SD_PRI_ACCT_NUM AND DD_PARTITION_DATE>=CAST(DATEADD(HOUR, -24, GETDATE()) AS DATE) AND DD_DATE>=DATEADD(HOUR, -24, GETDATE()) AND SD_TRAN_CDE IN ('474', '974') AND SD_RESP_CDE = '000') >=10000]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@SD_TRAN_CDE IN ('474', '974') AND @SD_RESP_CDE = '000' AND @CustomerType = 'EC']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Inter-account Staff  transactions – Count]]></NAME>
		<DESCRIPTION><![CDATA[Generate an alert for more than 3 transfers between the any staff customer’s accounts in 24 hours]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[(SELECT COUNT(1) FROM SHORTWINDOW WHERE SD_PRI_ACCT_NUM=@SD_PRI_ACCT_NUM AND DD_PARTITION_DATE>=CAST(DATEADD(HOUR, -24, GETDATE()) AS DATE) AND DD_DATE>=DATEADD(HOUR, -24, GETDATE()) AND SD_TRAN_CDE IN ('474', '974') AND SD_RESP_CDE = '000') >=3]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@SD_TRAN_CDE IN ('474', '974') AND @SD_RESP_CDE = '000' AND @CustomerType = 'EC']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Issued and Returned Cheques]]></NAME>
		<DESCRIPTION><![CDATA[Alert for 5 or more returned cheques issued by SAIB Individual/Sole Proprietorship/Corporate accounts in 30 days]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[((SELECT COUNT(TXNS_COUNT) FROM EP_CHEQUE_RETURN WHERE CYCLE_START_DATE>=DATEADD(DAY, -30, CAST(GETDATE() AS DATE))   AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)   AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM   AND SECONDARY_FIELD='D') + (SELECT COUNT(1) FROM SHORTWINDOW WHERE SD_PRI_ACCT_NUM=@SD_PRI_ACCT_NUM   AND DD_PARTITION_DATE>=CAST(GETDATE() AS DATE)   AND SD_TRAN_CDE = '093'   AND SD_CR_DB_IND = 'D'    AND SD_RESP_CDE='000')) >= 5]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@SD_TRAN_CDE = '093' AND @SD_CR_DB_IND = 'D' AND @SD_RESP_CDE <> '000']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Multiple Personal Finance loans]]></NAME>
		<DESCRIPTION><![CDATA[Generate an alert for more than 2 Personal Finance loan application from same customer during last 90 days]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[EXISTS (    SELECT TOP 1 1 FROM EP_PERS_LOANS    WHERE @SD_PRI_ACCT_NUM=PRIMARY_FIELD )]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[ @CustomerGroup = 'INDIV' AND @RECORD_SOURCE_ID=17 AND @SD_EVENT_TYP='LOR' AND @SD_EVENT_DETAIL2='MPT']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[New Employer – Personal Finance Loan]]></NAME>
		<DESCRIPTION><![CDATA[Generate alert for a Personal Finance loan given to New Employer Code recently registered]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[(SELECT COUNT(1) FROM ACCOUNT_MASTER WHERE SM_USER_POSTAL_CDE=@SM_USER_POSTAL_CDE   AND LEN(SM_ACCT_PROD_CAT)=3) < 3]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@isLoanAccount='1' AND @SD_TRAN_CDE IN ('336', '337') AND @CustomerGroup = 'INDIV']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Outgoing Swift - Abnormal Amount, CORP]]></NAME>
		<DESCRIPTION><![CDATA[Generate an alert for outgoing SWIFT transfers which exceed average amount of transactions for time period= 6 MONTHS /180 DAYS, for any corporate accounts]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[((SELECT SUM(TXNS_AMOUNT) FROM EP_SWIFT_TO WHERE CYCLE_START_DATE>=DATEADD(DAY, -30, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) + (SELECT SUM(MD_TRAN_AMT1) FROM SHORTWINDOW WHERE SD_PRI_ACCT_NUM=@SD_PRI_ACCT_NUM   AND DD_PARTITION_DATE>=CAST(GETDATE() AS DATE)   AND SD_RESP_CDE='000')) * 2 > ((SELECT SUM(TXNS_AMOUNT) FROM EP_SWIFT_TO WHERE CYCLE_START_DATE>=DATEADD(DAY, -180, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) / 180)]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@CustomerGroup = 'CORP' AND @SD_TRAN_CDE IN ('287', '787') AND @SD_RESP_CDE = '000']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Outgoing Swift - Abnormal Amount, INDIV]]></NAME>
		<DESCRIPTION><![CDATA[Generate an alert for outgoing SWIFT transfers which exceed average amount of transactions for time period= 6 MONTHS /180 DAYS, for any individual accounts]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[((SELECT SUM(TXNS_AMOUNT) FROM EP_SWIFT_TO WHERE CYCLE_START_DATE>=DATEADD(DAY, -30, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) + (SELECT SUM(MD_TRAN_AMT1) FROM SHORTWINDOW WHERE SD_PRI_ACCT_NUM=@SD_PRI_ACCT_NUM   AND DD_PARTITION_DATE>=CAST(GETDATE() AS DATE)   AND SD_RESP_CDE='000')) * 2 > (SELECT SUM(TXNS_AMOUNT) FROM EP_SWIFT_TO WHERE CYCLE_START_DATE>=DATEADD(DAY, -180, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) / 180]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@CustomerGroup = 'INDIV' AND @SD_TRAN_CDE IN ('287', '787') AND @SD_RESP_CDE = '000']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Outgoing Swift - Abnormal Amount, SOLPR]]></NAME>
		<DESCRIPTION><![CDATA[Generate an alert for outgoing SWIFT transfers which exceed average amount of transactions for time period= 6 MONTHS /180 DAYS, for any sole proprietor accounts]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[((SELECT SUM(TXNS_AMOUNT) FROM EP_SWIFT_TO WHERE CYCLE_START_DATE>=DATEADD(DAY, -30, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) + (SELECT SUM(MD_TRAN_AMT1) FROM SHORTWINDOW WHERE SD_PRI_ACCT_NUM=@SD_PRI_ACCT_NUM   AND DD_PARTITION_DATE>=CAST(GETDATE() AS DATE)   AND SD_RESP_CDE='000')) * 2 > ((SELECT SUM(TXNS_AMOUNT) FROM EP_SWIFT_TO WHERE CYCLE_START_DATE>=DATEADD(DAY, -180, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) / 180)]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@CustomerGroup = 'SOLPR' AND @SD_TRAN_CDE IN ('287', '787') AND @SD_RESP_CDE = '000']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Outgoing Swift - Abnormal Count, CORP]]></NAME>
		<DESCRIPTION><![CDATA[Generate an alert for outgoing SWIFT transfers which exceed average no. of transactions for time period= 6 MONTHS /180 DAYS, for any corporate accounts]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[((SELECT SUM(TXNS_COUNT) FROM EP_SWIFT_TO WHERE CYCLE_START_DATE>=DATEADD(DAY, -30, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) + (SELECT COUNT(1) FROM SHORTWINDOW WHERE SD_PRI_ACCT_NUM=@SD_PRI_ACCT_NUM   AND DD_PARTITION_DATE>=CAST(GETDATE() AS DATE)   AND SD_RESP_CDE='000')) * 2 > ((SELECT SUM(TXNS_COUNT) FROM EP_SWIFT_TO WHERE CYCLE_START_DATE>=DATEADD(DAY, -180, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) / 180)]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@CustomerGroup = 'CORP' AND @SD_TRAN_CDE IN ('287', '787') AND @SD_RESP_CDE = '000']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Outgoing Swift - Abnormal Count, INDIV]]></NAME>
		<DESCRIPTION><![CDATA[Generate an alert for outgoing SWIFT transfers which exceed average no. of transactions for time period= 6 MONTHS /180 DAYS, for any individual accounts]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[((SELECT SUM(TXNS_COUNT) FROM EP_SWIFT_TO WHERE CYCLE_START_DATE>=DATEADD(DAY, -30, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) + (SELECT COUNT(1) FROM SHORTWINDOW WHERE SD_PRI_ACCT_NUM=@SD_PRI_ACCT_NUM   AND DD_PARTITION_DATE>=CAST(GETDATE() AS DATE)   AND SD_RESP_CDE='000')) * 2 > ((SELECT SUM(TXNS_COUNT) FROM EP_SWIFT_TO WHERE CYCLE_START_DATE>=DATEADD(DAY, -180, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) / 180)]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@CustomerGroup = 'INDIV' AND @SD_TRAN_CDE IN ('287', '787') AND @SD_RESP_CDE = '000']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Outgoing Swift - Abnormal Count, SOLPR]]></NAME>
		<DESCRIPTION><![CDATA[Generate an alert for outgoing SWIFT transfers which exceed average no. of transactions for time period= 6 MONTHS /180 DAYS, for any sole proprietor accounts]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[((SELECT SUM(TXNS_COUNT) FROM EP_SWIFT_TO WHERE CYCLE_START_DATE>=DATEADD(DAY, -30, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) + (SELECT COUNT(1) FROM SHORTWINDOW WHERE SD_PRI_ACCT_NUM=@SD_PRI_ACCT_NUM   AND DD_PARTITION_DATE>=CAST(GETDATE() AS DATE)   AND SD_RESP_CDE='000')) * 2 > ((SELECT SUM(TXNS_COUNT) FROM EP_SWIFT_TO WHERE CYCLE_START_DATE>=DATEADD(DAY, -180, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) / 180)]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@CustomerGroup = 'SOLPR' AND @SD_TRAN_CDE IN ('287', '787') AND @SD_RESP_CDE = '000']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Personal Finance loans – Abnormal Amount]]></NAME>
		<DESCRIPTION><![CDATA[Generate alert for a Personal Finance loan of SAR 500,000 or more]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[]]>
		</SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@isLoanAccount='1' AND @SM_ACCT_PROD_CAT IN ('HFI', 'HFM', 'MPB', 'MPG', 'MPS', 'MPT', 'MTK', 'MBT') AND @SD_TRAN_CDE IN ('336', '337') AND @CustomerGroup = 'INDIV' AND @MD_TRAN_AMT1 > 500000]]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Personal Finance loans – Abnormal Count]]></NAME>
		<DESCRIPTION><![CDATA[Generate alert for more than 5 Personal Finance loans to same Employer Code in 3 days]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[(SELECT COUNT(1) FROM ACCOUNT_MASTER WHERE SM_USER_POSTAL_CDE=@SM_USER_POSTAL_CDE   AND DM_ACCT_OPN_DAT>=DATEADD(DAY, -3, GETDATE())   AND LEN(SM_ACCT_PROD_CAT)=3 ) >= 5]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@isLoanAccount='1' AND @SD_TRAN_CDE IN ('336', '337') AND @CustomerGroup = 'INDIV']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[POS transaction amount]]></NAME>
		<DESCRIPTION><![CDATA[Generate an alert for POS transactions of SAR 40,000 within 48 hours]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[(SELECT SUM(MD_TRAN_AMT1) FROM SHORTWINDOW WHERE SD_PRI_ACCT_NUM=@SD_PRI_ACCT_NUM   AND DD_PARTITION_DATE>=DATEADD(HOUR, -48, GETDATE())   AND DD_DATE>DATEADD(HOUR, -48, GETDATE())   AND SD_PROD_IND = '02' ) >= 40000]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@CustomerGroup = 'INDIV' AND @SD_PROD_IND = '02' AND @MD_TRAN_AMT1 > 0 AND @SD_RESP_CDE = '000']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Possible Personal loan fraud]]></NAME>
		<DESCRIPTION><![CDATA[Generate an alert if the installment - debit account for Personal Finance customer is different from salary account]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[]]>
		</SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@CustomerGroup = 'INDIV' AND @SD_TRAN_CDE = '101' AND @MD_TRAN_AMT1 > 0 AND @SM_ACCT_PROD_CAT not in ('SR', 'ST')]]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Returned  Cheques of other Banks]]></NAME>
		<DESCRIPTION><![CDATA[Alert for 5 or more returned cheques deposited in SAIB Individual/Sole Proprietorship /Corporate account in 30 days]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[((SELECT COUNT(TXNS_COUNT) FROM EP_CHEQUE_RETURN WHERE CYCLE_START_DATE>=DATEADD(DAY, -30, CAST(GETDATE() AS DATE))   AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)   AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM   AND SECONDARY_FIELD='C') + (SELECT COUNT(1) FROM SHORTWINDOW WHERE SD_PRI_ACCT_NUM=@SD_PRI_ACCT_NUM   AND DD_PARTITION_DATE>=CAST(GETDATE() AS DATE)   AND SD_TRAN_CDE = '093'   AND SD_CR_DB_IND = 'C'   AND SD_RESP_CDE='000')) >= 5]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@SD_TRAN_CDE = '093' AND @SD_CR_DB_IND = 'C' AND @SD_RESP_CDE <> '000']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[SARIE transfer – Abnormal Amount, CORP]]></NAME>
		<DESCRIPTION><![CDATA[Generate an alert for SARIE transfers which exceed average amount of transactions for a time period of 6 MONTHS/180 DAYS, for any corporate accounts]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[((SELECT SUM(TXNS_AMOUNT) FROM EP_SARIE_TO WHERE CYCLE_START_DATE>=DATEADD(DAY, -30, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) + (SELECT SUM(MD_TRAN_AMT1) FROM SHORTWINDOW WHERE SD_PRI_ACCT_NUM=@SD_PRI_ACCT_NUM   AND DD_PARTITION_DATE>=CAST(GETDATE() AS DATE)   AND SD_RESP_CDE='000')) * 2 > ((SELECT SUM(TXNS_AMOUNT) FROM EP_SARIE_TO WHERE CYCLE_START_DATE>=DATEADD(DAY, -180, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) / 180)]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@CustomerGroup = 'CORP' AND @SD_TRAN_CDE = '288' AND @SD_RESP_CDE = '000']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[SARIE transfer – Abnormal Amount, INDIV]]></NAME>
		<DESCRIPTION><![CDATA[Generate an alert for SARIE transfers which exceed average amount of transactions for a time period of 6 MONTHS/180 DAYS, for any individual accounts]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[((SELECT SUM(TXNS_AMOUNT) FROM EP_SARIE_TO WHERE CYCLE_START_DATE>=DATEADD(DAY, -30, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) + (SELECT SUM(MD_TRAN_AMT1) FROM SHORTWINDOW WHERE SD_PRI_ACCT_NUM=@SD_PRI_ACCT_NUM   AND DD_PARTITION_DATE>=CAST(GETDATE() AS DATE)   AND SD_RESP_CDE='000')) * 2 > ((SELECT SUM(TXNS_AMOUNT) FROM EP_SARIE_TO WHERE CYCLE_START_DATE>=DATEADD(DAY, -180, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) / 180)]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@CustomerGroup = 'INDIV' AND @SD_TRAN_CDE = '288' AND @SD_RESP_CDE = '000']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[SARIE transfer – Abnormal Amount, SOLPR]]></NAME>
		<DESCRIPTION><![CDATA[Generate an alert for SARIE transfers which exceed average amount of transactions for a time period of 6 MONTHS/180 DAYS, for any sole proprietor accounts]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[((SELECT SUM(TXNS_AMOUNT) FROM EP_SARIE_TO WHERE CYCLE_START_DATE>=DATEADD(DAY, -30, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) + (SELECT SUM(MD_TRAN_AMT1) FROM SHORTWINDOW WHERE SD_PRI_ACCT_NUM=@SD_PRI_ACCT_NUM   AND DD_PARTITION_DATE>=CAST(GETDATE() AS DATE)   AND SD_RESP_CDE='000')) * 2 > ((SELECT SUM(TXNS_AMOUNT) FROM EP_SARIE_TO WHERE CYCLE_START_DATE>=DATEADD(DAY, -180, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) / 180)]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@CustomerGroup = 'SOLPR' AND @SD_TRAN_CDE = '288' AND @SD_RESP_CDE = '000']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[SARIE transfer – Abnormal Count, CORP]]></NAME>
		<DESCRIPTION><![CDATA[Generate an alert for SARIE transfers which exceed average no. of transactions for a time period of 6 MONTHS/180 DAYS, for any corporate accounts]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[((SELECT SUM(TXNS_COUNT) FROM EP_SARIE_TO WHERE CYCLE_START_DATE>=DATEADD(DAY, -30, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) + (SELECT COUNT(1) FROM SHORTWINDOW WHERE SD_PRI_ACCT_NUM=@SD_PRI_ACCT_NUM   AND DD_PARTITION_DATE>=CAST(GETDATE() AS DATE)   AND SD_RESP_CDE='000')) * 2 > ((SELECT SUM(TXNS_COUNT) FROM EP_SARIE_TO WHERE CYCLE_START_DATE>=DATEADD(DAY, -180, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) / 180)]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@CustomerGroup = 'CORP' AND @SD_TRAN_CDE = '288' AND @SD_RESP_CDE = '000']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[SARIE transfer – Abnormal Count, INDIV]]></NAME>
		<DESCRIPTION><![CDATA[Generate an alert for SARIE transfers which exceed average no. of transactions for a time period of 6 MONTHS/180 DAYS, for any individual accounts]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[((SELECT SUM(TXNS_COUNT) FROM EP_SARIE_TO WHERE CYCLE_START_DATE>=DATEADD(DAY, -30, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) + (SELECT COUNT(1) FROM SHORTWINDOW WHERE SD_PRI_ACCT_NUM=@SD_PRI_ACCT_NUM   AND DD_PARTITION_DATE>=CAST(GETDATE() AS DATE)   AND SD_RESP_CDE='000')) * 2 > ((SELECT SUM(TXNS_COUNT) FROM EP_SARIE_TO WHERE CYCLE_START_DATE>=DATEADD(DAY, -180, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) / 180)]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@CustomerGroup = 'INDIV' AND @SD_TRAN_CDE = '288' AND @SD_RESP_CDE = '000']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[SARIE transfer – Abnormal Count, SOLPR]]></NAME>
		<DESCRIPTION><![CDATA[Generate an alert for SARIE transfers which exceed average no. of transactions for a time period of 6 MONTHS/180 DAYS, for any sole proprietor accounts]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[((SELECT SUM(TXNS_COUNT) FROM EP_SARIE_TO WHERE CYCLE_START_DATE>=DATEADD(DAY, -30, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) + (SELECT COUNT(1) FROM SHORTWINDOW WHERE SD_PRI_ACCT_NUM=@SD_PRI_ACCT_NUM   AND DD_PARTITION_DATE>=CAST(GETDATE() AS DATE)   AND SD_RESP_CDE='000')) * 2 > ((SELECT SUM(TXNS_COUNT) FROM EP_SARIE_TO WHERE CYCLE_START_DATE>=DATEADD(DAY, -180, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) / 180)]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@CustomerGroup = 'SOLPR' AND @SD_TRAN_CDE = '288' AND @SD_RESP_CDE = '000']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Staff  Account Transactions -Abnormal Amount]]></NAME>
		<DESCRIPTION><![CDATA[Generate an alert for non-Salary credit/non-Card transaction on staff account exceeds 10000 SAR under one or more of the following txn code]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[(SELECT SUM(TXNS_AMOUNT) FROM EP_NON_SALARY WHERE CYCLE_START_DATE>=DATEADD(DAY, 30, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) + (SELECT SUM(MD_TRAN_AMT1) FROM SHORTWINDOW WHERE SD_PRI_ACCT_NUM=@SD_PRI_ACCT_NUM AND DD_PARTITION_DATE>=CAST(GETDATE() AS DATE) AND SD_TRAN_CDE IN ('450', '587', '950', '087', '542', '665', '474', '974', '015', '085', '453', '585', '953', '019', '516', '519', '953', '486', '656', '657', '660', '986', '974', '975', '492', '666', '475', '975', '595', '667', '597', '685', '153', '653', '557', '559', '686', '663', '693', '505', '510', '515', '506') AND SD_RESP_CDE = '000') >=10000]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@SD_TRAN_CDE IN ('450', '587', '950', '087', '542', '665', '474', '974', '015', '085', '453', '585', '953', '019', '516', '519', '953', '486', '656', '657', '660', '986', '974', '975', '492', '666', '475', '975', '595', '667', '597', '685', '153', '653', '557', '559', '686', '663', '693', '505', '510', '515', '506') AND @SD_RESP_CDE = '000' AND @CustomerType = 'EC']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Staff  Account Transactions -Abnormal Count]]></NAME>
		<DESCRIPTION><![CDATA[Generate an alert for non-Salary credit/non-Card transaction on staff account exceeds count of 10  under one or more of the following txn code]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[(SELECT SUM(TXNS_COUNT) FROM EP_NON_SALARY WHERE CYCLE_START_DATE>=DATEADD(DAY, 30, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) + (SELECT COUNT(1) FROM SHORTWINDOW WHERE SD_PRI_ACCT_NUM=@SD_PRI_ACCT_NUM AND DD_PARTITION_DATE>=CAST(GETDATE() AS DATE) AND SD_TRAN_CDE IN ('450', '587', '950', '087', '542', '665', '474', '974', '015', '085', '453', '585', '953', '019', '516', '519', '953', '486', '656', '657', '660', '986', '974', '975', '492', '666', '475', '975', '595', '667', '597', '685', '153', '653', '557', '559', '686', '663', '693', '505', '510', '515', '506') AND SD_RESP_CDE = '000') >=10]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@SD_TRAN_CDE IN ('450', '587', '950', '087', '542', '665', '474', '974', '015', '085', '453', '585', '953', '019', '516', '519', '953', '486', '656', '657', '660', '986', '974', '975', '492', '666', '475', '975', '595', '667', '597', '685', '153', '653', '557', '559', '686', '663', '693', '505', '510', '515', '506') AND @SD_RESP_CDE = '000' AND @CustomerType = 'EC']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Staff accounts FX transactions - Amount]]></NAME>
		<DESCRIPTION><![CDATA[Generate an alert for 3 or more currency note transactions in 30 days on Staff accounts]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[(SELECT SUM(TXNS_AMOUNT) FROM EP_CRNCY_NOTES WHERE CYCLE_START_DATE>=DATEADD(DAY, 30, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) + (SELECT SUM(MD_TRAN_AMT1) FROM SHORTWINDOW WHERE SD_PRI_ACCT_NUM=@SD_PRI_ACCT_NUM AND DD_PARTITION_DATE>=CAST(GETDATE() AS DATE) AND SD_TRAN_CDE IN ('041', '042', '541', '542') AND SD_RESP_CDE = '000') >=10000]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@SD_TRAN_CDE IN ('041', '042', '541', '542') AND @SD_RESP_CDE = '000' AND @CustomerType = 'EC']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Staff accounts FX transactions - Count]]></NAME>
		<DESCRIPTION><![CDATA[Generate an alert for 3 or more currency note transactions in 30 days on Staff accounts]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[(SELECT SUM(TXNS_COUNT) FROM EP_CRNCY_NOTES WHERE CYCLE_START_DATE>=DATEADD(DAY, 30, CAST(GETDATE() AS DATE))  AND CYCLE_START_DATE<CAST(GETDATE() AS DATE)  AND PRIMARY_FIELD=@SD_PRI_ACCT_NUM) + (SELECT COUNT(1) FROM SHORTWINDOW WHERE SD_PRI_ACCT_NUM=@SD_PRI_ACCT_NUM AND DD_PARTITION_DATE>=CAST(GETDATE() AS DATE) AND SD_TRAN_CDE IN ('041', '042', '541', '542') AND SD_RESP_CDE = '000') >=3]]></SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[@SD_TRAN_CDE IN ('041', '042', '541', '542') AND @SD_RESP_CDE = '000' AND @CustomerType = 'EC']]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
	<Rules>
		<NAME><![CDATA[Test transactions]]></NAME>
		<DESCRIPTION><![CDATA[Alert for a Debit/credit transaction which is less than USD 1 in an account]]></DESCRIPTION>
		<RULEDEFID>0</RULEDEFID>
		<SUBTYPEID>0</SUBTYPEID>
		<ACTION_LEVEL>7</ACTION_LEVEL>
		<SQLSYNTAX><![CDATA[]]>
		</SQLSYNTAX>
		<ENTRANCE_CRITERIA><![CDATA[ @MD_TRAN_AMT1 < 4]]></ENTRANCE_CRITERIA>
		<DISPOSITIONTYPE></DISPOSITIONTYPE>
	</Rules>
</AggregatesAndRules>